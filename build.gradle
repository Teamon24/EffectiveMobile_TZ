plugins {
    id 'java'
    id 'application'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group 'org.effective_mobile.task_management_system'
version '1.0-SNAPSHOT'

def mainClazz = 'org.effective_mobile.task_management_system.TaskManagementSystemApp'
java { sourceCompatibility = '17' }
application { mainClassName = mainClazz }
repositories { mavenCentral() }

sourceSets {
    generated {
        java {
            srcDirs = ['build/generated/sources/annotationProcessor/java/main']
        }
    }
}

dependencies {
    //LOMBOK -----------------------------------------------------------------
    def lombok_v = '1.18.30'
    def querydsl_v = '5.0.0:jakarta'
    def jakarta_v = '3.1.0'
    def junitVersion = '5.10.1'

    compileOnly "org.projectlombok:lombok:${lombok_v}"
    annotationProcessor "org.projectlombok:lombok:${lombok_v}"
    testCompileOnly "org.projectlombok:lombok:${lombok_v}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombok_v}"

    // SPRING ----------------------------------------------------------------
    configurations {
        all {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
            exclude group: 'org.springframework.boot', module: 'logback-classic'
        }
    }

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.lmax:disruptor:3.4.4'
    // JWT -------------------------------------------------------------------
    implementation 'com.auth0:java-jwt:4.4.0'
    // QUERYDSL --------------------------------------------------------------
    implementation "com.querydsl:querydsl-jpa:${querydsl_v}"
    annotationProcessor "com.querydsl:querydsl-apt:${querydsl_v}"

    implementation "jakarta.persistence:jakarta.persistence-api:${jakarta_v}"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:${jakarta_v}"
    // MISC -----------------------------------------------------------------
    implementation 'org.postgresql:postgresql:42.5.4'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    // DOCUMENTING----------------------------------------------------------
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.3'

    // TESTS --------------------------------------------------------------
    implementation 'net.datafaker:datafaker:2.0.2'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"

    testRuntimeOnly 'com.h2database:h2'

    testImplementation 'org.testcontainers:junit-jupiter:1.17.5'
    testImplementation 'org.testcontainers:testcontainers:1.17.5'
    testImplementation 'org.testcontainers:postgresql:1.17.5'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

def jarName = 'task-management-system'
def jarNameVersExt = "$jarName-${version}.jar"

def jarMap = [
        jar: [
                name    : jarName,
                fullname: jarNameVersExt,
                build   : "build/libs/$jarNameVersExt",
                deploy  : "deploy/$jarNameVersExt"]
]

def jafFileInfo = jarMap.get("jar")

task copyJar(type: Copy) { from jafFileInfo.build; into 'deploy' }
task deleteJar() { project.delete(files(jafFileInfo.deploy)) }

bootJar {
    archiveFileName = jarNameVersExt
}
